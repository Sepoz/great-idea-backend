{"version":3,"sources":["components/Post.js","components/PostMap.js","components/PostRender.js","App.js","index.js"],"names":["Post","newPost","setNewPost","posts","setPosts","newTitle","setNewTitle","onSubmit","event","preventDefault","postObject","title","content","karmaTotal","date","Date","toUTCString","axios","post","then","res","concat","data","catch","err","console","log","type","value","required","onChange","target","PostMap","useState","karma","setKarma","voted","setVoted","useEffect","patch","id","className","onClick","window","alert","PostRender","map","key","App","get","ReactDOM","render","document","getElementById"],"mappings":"0MA8CeA,EA3CF,SAAC,GAAqE,IAAnEC,EAAkE,EAAlEA,QAASC,EAAyD,EAAzDA,WAAYC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAgC5D,OACE,6BACE,0BAAMC,SA/BM,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAa,CACxBC,MAAON,EACPO,QAASX,EACTY,WAAY,EACZC,MAAM,IAAIC,MAAOC,eAGlBC,IACEC,KAAK,8BAA+BR,GACpCS,MAAK,SAAAC,GACLhB,EAASD,EAAMkB,OAAOD,EAAIE,OAC1BpB,EAAW,IACXI,EAAY,OAEZiB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAgBnB,2BAAOG,KAAK,OAAOC,MAAOvB,EAAUwB,UAAQ,EAACC,SAPzB,SAACtB,GAC7BF,EAAYE,EAAMuB,OAAOH,UAOjB,8BAAUD,KAAK,OAAOC,MAAO3B,EAAS4B,UAAQ,EAACC,SAbzB,SAACtB,GACzBN,EAAWM,EAAMuB,OAAOH,UAatB,4BAAQD,KAAK,UAAb,WCgBKK,EArDC,SAAC,GAAc,IAAZd,EAAW,EAAXA,KAAW,EACAe,mBAASf,EAAKL,YADd,mBACnBqB,EADmB,KACZC,EADY,OAEAF,oBAAS,GAFT,mBAEnBG,EAFmB,KAEZC,EAFY,KAyC1B,OAXAC,qBAAU,WACNrB,IACCsB,MADD,sCACsCrB,EAAKsB,IAAM,CAC7C3B,WAAYqB,IAEff,MAAK,SAAAC,GAAG,OAAIK,QAAQC,IAAIN,EAAIE,SAC5BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,CAACU,EAAOhB,EAAKsB,KAKZ,yBAAKC,UAAU,QACX,4BAAKvB,EAAKP,OACV,4BAAKuB,EAAL,IAAahB,EAAKN,SAElB,4BAAQ8B,QApCW,YACT,IAAVN,GACAD,EAASD,EAAQ,GACjBG,GAAS,IAETM,OAAOC,MAAM,wBA+Bb,UACA,4BAAQF,QA3Ba,YACX,IAAVN,GACAD,EAASD,EAAQ,GACjBG,GAAS,IAETM,OAAOC,MAAM,uBAsBb,YACA,4BAAQF,QA3CY,WACxBjB,QAAQC,IAAI,eA0CR,cC3CGmB,EAJI,SAAC,GAChB,OAD8B,EAAZ1C,MACL2C,KAAI,SAAA5B,GAAI,OAAI,kBAAC,EAAD,CAAS6B,IAAK7B,EAAKsB,GAAItB,KAAMA,QC6B3C8B,EA7BH,WAAO,IAAD,EACSf,mBAAS,IADlB,mBACV9B,EADU,KACHC,EADG,OAEe6B,mBAAS,IAFxB,mBAERhC,EAFQ,KAECC,EAFD,OAGiB+B,mBAAS,IAH1B,mBAGR5B,EAHQ,KAGEC,EAHF,KAcjB,OATEgC,qBAAU,WACXrB,IACEgC,IAAI,+BACJ9B,MAAK,SAAAC,GACLhB,EAASgB,EAAIE,SAEbC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QACzB,IAGF,6BAEA,wCAEA,4BACC,kBAAC,EAAD,CAAYrB,MAAOA,KAGpB,kBAAC,EAAD,CAAMF,QAASA,EAASC,WAAYA,EAAYC,MAAOA,EAAOC,SAAUA,EAAUC,SAAUA,EAAUC,YAAaA,MCvBrH4C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.35481814.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nconst Post = ({ newPost, setNewPost, posts, setPosts, newTitle, setNewTitle }) => {\n    \n    // create the post object\n    const addPost = (event) => {\n        event.preventDefault()\n        const postObject = {\n\t\t\ttitle: newTitle,\n\t\t\tcontent: newPost,\n\t\t\tkarmaTotal: 1,\n\t\t\tdate: new Date().toUTCString()\n\t\t}\n\t\t\n\t\taxios\n\t\t\t.post(\"http://localhost:3001/posts\", postObject)\n\t\t\t.then(res => {\n\t\t\t\tsetPosts(posts.concat(res.data));\n\t\t\t\tsetNewPost(\"\");\n\t\t\t\tsetNewTitle(\"\");\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n    };\n\n    // handle the tiping in the content input\n    const handleContentChange = (event) => {\n        setNewPost(event.target.value);\n    };\n\n    // handle the tiping in the comment input\n    const handleTitleChange = (event) => {\n\t\tsetNewTitle(event.target.value);\n    };\n\n    return (\n      <div>\n        <form onSubmit={addPost}>\n          <input type=\"text\" value={newTitle} required onChange={handleTitleChange} />\n          <textarea type=\"text\" value={newPost} required onChange={handleContentChange} />\n          <button type=\"submit\">post</button>\n        </form>\n      </div>\n    );\n}\n\nexport default Post;","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst PostMap = ({ post }) => {\n    const [karma, setKarma] = useState(post.karmaTotal);\n    const [voted, setVoted] = useState(false);\n\n    // handle comment button\n    const handleCommentButton = () => {\n        console.log(\"comments!\");\n    };\n\n    // handle upvote button\n    const handleUpvoteButton = () => {\n        if (voted === false) {\n            setKarma(karma + 1);\n            setVoted(true);\n        } else {\n            window.alert(\"You already voted!\");\n        };\n    };\n\n    // handle downvote button\n    const handleDownvoteButton = () => {\n        if (voted === false) {\n            setKarma(karma - 1);\n            setVoted(true);\n        } else {\n            window.alert(\"You alredy voted!\");\n        };\n    };\n\n    // patch request\n    useEffect(() => {\n        axios\n        .patch(`http://localhost:3001/posts/${post.id}`, {\n            karmaTotal: karma\n        })  \n        .then(res => console.log(res.data))\n        .catch(err => console.log(err))\n    }, [karma, post.id]);\n\n\n\n    return (\n        <div className=\"post\">\n            <h3>{post.title}</h3>\n            <li>{karma} {post.content}</li>\n            \n            <button onClick={handleUpvoteButton}>upvote</button>\n            <button onClick={handleDownvoteButton}>downvote</button>\n            <button onClick={handleCommentButton}>comments</button>\n        </div>\n    )\n};\n\nexport default PostMap;","import React from \"react\";\nimport PostMap from \"./PostMap\";\n\n// map every post \nconst PostRender = ({ posts }) => {\n    return posts.map(post => <PostMap key={post.id} post={post} />)\n};\n\nexport default PostRender;","import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport Post from \"./components/Post\";\nimport PostRender from './components/PostRender';\n\nconst App = () => {\n\tconst [posts, setPosts] = useState([]);\n  \tconst [newPost, setNewPost] = useState(\"\");\n  \tconst [newTitle, setNewTitle] = useState(\"\");\n\n  \tuseEffect(() => {\n\t\taxios\n\t\t\t.get(\"http://localhost:3001/posts\")\n\t\t\t.then(res => {\n\t\t\t\tsetPosts(res.data);\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t}, [])\n\n\treturn (\n\t\t<div>\n\n\t\t<h1>Reddit 2</h1>\n\t\t\n\t\t<ul>\n\t\t\t<PostRender posts={posts} />\n\t\t</ul>\n\n\t\t<Post newPost={newPost} setNewPost={setNewPost} posts={posts} setPosts={setPosts} newTitle={newTitle} setNewTitle={setNewTitle} /> \n\n\t\t</div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}